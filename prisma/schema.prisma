generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organisation {
  id               String             @id @default(uuid()) @db.Uuid
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  name             String             @db.VarChar(255)
  token            String             @db.VarChar(1024)
  OrganisationUser OrganisationUser[]
  Player           Player[]
}

model OrganisationUser {
  id             String       @id @default(uuid()) @db.Uuid
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  organisationId String       @db.Uuid
  userId         String       @db.Uuid
  Organisation   Organisation @relation(fields: [organisationId], references: [id])
  User           User         @relation(fields: [userId], references: [id])
}

model User {
  id               String             @id @default(uuid()) @db.Uuid
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  playerId         String             @db.VarChar(255)
  name             String             @db.VarChar(255)
  OrganisationUser OrganisationUser[]
  Player           Player[]
}

model Player {
  id             String        @id @default(uuid()) @db.Uuid
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  userId         String        @db.Uuid
  organisationId String        @db.Uuid
  data           Json
  Organisation   Organisation  @relation(fields: [organisationId], references: [id])
  User           User          @relation(fields: [userId], references: [id])
  PlayerData     PlayerData[]
  PlayerEvent    PlayerEvent[]
}

model PlayerEvent {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  data      Json
  playerId  String   @db.Uuid
  Player    Player   @relation(fields: [playerId], references: [id])
}

model PlayerData {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  code      String
  data      Json
  playerId  String   @db.Uuid
  Player    Player   @relation(fields: [playerId], references: [id])
}
